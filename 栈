#pragma once

#include<stdio.h>
#include<assert.h>
#include<string.h>



//typedef int DataType;
typedef char DataType;



#define MAX_SIZE 100

typedef struct Stack
{
	DataType _arr[MAX_SIZE];
	int _top;
}Stack;

void StackInit(Stack* s)
{
	assert(s);
	s->_top = 0;
}

int StackEmpty(Stack* s)
{
	assert(s);
	return 0 == s->_top;
}

void StackPush(Stack* s, DataType data)
{
	assert(s);
	if (s->_top == MAX_SIZE)
	{
		printf("栈已经满了！\n");
	}
	s->_arr[s->_top] = data;
	s->_top++;
}
void StackPop(Stack* s)
{
	assert(s);
	if (StackEmpty(s))
	{
		printf("栈已经空了！\n");
		return;
	}
	s->_top--;

}
DataType StackTop(Stack* s)
{
	assert(s);
	return s->_arr[s->_top - 1];
}
int StackSize(Stack* s)
{
	assert(s);
	return s->_top;
}


//
void Test()
{
	Stack s;
	StackInit(&s);

	StackPush(&s, 1);
	StackPush(&s, 2);
	StackPush(&s, 3);
	StackPush(&s, 4);
	StackPush(&s, 5);
	StackPush(&s, 6);

	printf("size = %d\n", StackSize(&s));
	printf("top = %d\n", StackTop(&s));


	StackPop(&s);
	printf("size = %d\n", StackSize(&s));
	printf("top = %d\n", StackTop(&s));
}
